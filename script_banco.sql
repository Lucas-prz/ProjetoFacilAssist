USE master;
GO

CREATE DATABASE ProjetoFA;
GO

USE ProjetoFA;
GO

CREATE TABLE TIPO_CLIENTE(
 TIPO INT NOT NULL PRIMARY KEY,
 DESCRICAO VARCHAR(50) NOT NULL
);
GO

CREATE TABLE STATUS_CLIENTE(
 STATUS INT NOT NULL PRIMARY KEY,
 DESCRICAO VARCHAR(50) NOT NULL
);
GO

CREATE TABLE CLIENTES(
 CPF VARCHAR(11) NOT NULL PRIMARY KEY,
 NOME VARCHAR(50) NOT NULL,
 SEXO CHAR(1) NOT NULL,
 STATUS INT FOREIGN KEY REFERENCES STATUS_CLIENTE(STATUS),
 TIPO INT FOREIGN KEY REFERENCES TIPO_CLIENTE(TIPO)
);
GO

CREATE TABLE USUARIOS_API(
 LOGIN VARCHAR(20) NOT NULL PRIMARY KEY,
 SENHA VARCHAR(20) NOT NULL
);
GO

INSERT INTO USUARIOS_API ("LOGIN", "SENHA") VALUES ('Usuario_Teste', 'Te$t987');
GO

CREATE PROCEDURE ValidaAcesso
@Login VARCHAR(20),
@Senha VARCHAR(20),
@Retorno INT OUTPUT
AS
BEGIN 
	SELECT * FROM USUARIOS_API WHERE LOGIN = @Login AND SENHA = @Senha;
	SELECT @Retorno =  @@ROWCOUNT;
END;
GO

/* Procedures de Clientes */
CREATE PROCEDURE GravaCliente 
@Cpf VARCHAR(11), 
@Nome VARCHAR(50), 
@Sexo CHAR(1), 
@Status INT,
@Tipo INT
AS
BEGIN 
	BEGIN TRANSACTION
		IF EXISTS(SELECT * FROM CLIENTES WHERE CPF = @Cpf)
			BEGIN
				UPDATE CLIENTES SET NOME = @Nome, SEXO = @Sexo, STATUS = @Status, TIPO = @Tipo WHERE CPF = @Cpf;
			END
		ELSE
			BEGIN
				INSERT INTO CLIENTES (CPF, NOME, SEXO, STATUS, TIPO) VALUES (@Cpf, @Nome, @Sexo, @Status, @Tipo);
			END
	COMMIT TRANSACTION;
END;
GO

CREATE PROCEDURE ExcluirCliente 
@Cpf VARCHAR(11)
AS
BEGIN 
	BEGIN TRANSACTION
		DELETE CLIENTES WHERE CPF = @Cpf;
	COMMIT TRANSACTION;
END;
GO

CREATE PROCEDURE CarregaCliente 
@Cpf VARCHAR(11)
AS
BEGIN 
	SELECT CPF, NOME, SEXO, CLI.TIPO, TP.DESCRICAO DESCTIPO,
	CLI.STATUS, ST.DESCRICAO DESCSTATUS
	FROM CLIENTES AS CLI
	INNER JOIN TIPO_CLIENTE AS TP ON CLI.TIPO = TP.TIPO
	INNER JOIN STATUS_CLIENTE AS ST ON CLI.STATUS = ST.STATUS
	WHERE CPF = @Cpf;
END;
GO

CREATE PROCEDURE ListaClientes
AS
BEGIN 	
	SELECT CLI.CPF, CLI.NOME, CLI.SEXO, CLI.TIPO, TP.DESCRICAO DESCTIPO,
	CLI.STATUS, ST.DESCRICAO DESCSTATUS
	FROM CLIENTES AS CLI
	INNER JOIN TIPO_CLIENTE AS TP ON CLI.TIPO = TP.TIPO
	INNER JOIN STATUS_CLIENTE AS ST ON CLI.STATUS = ST.STATUS
	ORDER BY CLI.NOME;
END;
GO

/* Procedures Tipo de Clientes */
CREATE PROCEDURE GravaTipo
@Tipo INT,
@Descr VARCHAR(50)
AS
BEGIN 
	BEGIN TRANSACTION
		IF EXISTS(SELECT * FROM TIPO_CLIENTE WHERE TIPO = @Tipo)
			BEGIN
				UPDATE TIPO_CLIENTE SET DESCRICAO = @Descr WHERE TIPO = @Tipo;
			END
		ELSE
			BEGIN
				INSERT INTO TIPO_CLIENTE (TIPO, DESCRICAO) VALUES (@Tipo, @Descr);
			END
	COMMIT TRANSACTION;
END;
GO

CREATE PROCEDURE CarregaTipoCliente 
@Tipo INT
AS
BEGIN 
 SELECT * FROM TIPO_CLIENTE WHERE TIPO = @Tipo;
END;
GO

CREATE PROCEDURE ListaTiposDeClientes
AS
BEGIN 
 SELECT * FROM TIPO_CLIENTE ORDER BY TIPO;
END;
GO

EXEC  GravaTipo @Tipo = 1, @Descr = 'CONSUMIDOR';
Go
EXEC  GravaTipo @Tipo = 2, @Descr = 'REVENDEDOR';
Go
EXEC  GravaTipo @Tipo = 3, @Descr = 'OUTROS';
Go
/* Procedures Status*/
CREATE PROCEDURE GravaStatus
@Status INT,
@Descr VARCHAR(50)
AS
BEGIN 
	BEGIN TRANSACTION
		IF EXISTS(SELECT * FROM STATUS_CLIENTE WHERE STATUS = @Status)
			BEGIN
				UPDATE STATUS_CLIENTE SET DESCRICAO = @Descr WHERE STATUS = @Status;
			END
		ELSE
			BEGIN
				INSERT INTO STATUS_CLIENTE (STATUS, DESCRICAO) VALUES (@Status, @Descr);
			END
	COMMIT TRANSACTION;
END;
GO

CREATE PROCEDURE CarregaStatusCliente 
@Status INT
AS
BEGIN 
 SELECT * FROM STATUS_CLIENTE WHERE STATUS = @Status;
END;
GO

CREATE PROCEDURE ListaStatusDeClientes
AS
BEGIN 
 SELECT * FROM STATUS_CLIENTE ORDER BY STATUS;
END;
GO

EXEC  GravaStatus @Status = 1, @Descr = 'ATIVO';
Go
EXEC  GravaStatus @Status = 2, @Descr = 'CONFIRMACAO PENDENTE';
Go
EXEC  GravaStatus @Status = 3, @Descr = 'SUSPENSO';
Go
EXEC  GravaStatus @Status = 4, @Descr = 'INATIVO PERMANENTE';
Go


